// Generated by @wagmi/cli@0.1.15 on 2023/4/18 at 18:46:06

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GeneralKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const generalKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'corpNo',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'info', internalType: 'bytes32', type: 'bytes32', indexed: true },
    ],
    name: 'CreateCorpSeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'bool', type: 'bool', indexed: true },
    ],
    name: 'ExecAction',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'title',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'book', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'RegBook',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'title',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RegBookeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'regNumHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'nameOfCompany',
        internalType: 'string',
        type: 'string',
        indexed: true,
      },
      {
        name: 'symbolOfCompany',
        internalType: 'string',
        type: 'string',
        indexed: true,
      },
    ],
    name: 'SetCompInfo',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptAlongDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'sigHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'acceptSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'castVoteOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'closeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'info', internalType: 'bytes32', type: 'bytes32' }],
    name: 'createCorpSeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfIA', internalType: 'uint256', type: 'uint256' }],
    name: 'createIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfPld', internalType: 'bytes32', type: 'bytes32' },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'version', internalType: 'uint256', type: 'uint256' }],
    name: 'createSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'crystalizeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'parValue', internalType: 'uint256', type: 'uint256' },
      { name: 'paidPar', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'effectiveSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegateOfMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execActionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAntiDilution',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execDragAlong',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfRule', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfRightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'execOption',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'execSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execTagAlong',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'extDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'extendPledge',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOA',
    outputs: [
      { name: '', internalType: 'contract IBookOfIA', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOD',
    outputs: [
      { name: '', internalType: 'contract IBookOfDirectors', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOG',
    outputs: [
      { name: '', internalType: 'contract IBookOfGM', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOH',
    outputs: [
      { name: '', internalType: 'contract IBookOfSHA', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOO',
    outputs: [
      { name: '', internalType: 'contract IBookOfOptions', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOP',
    outputs: [
      { name: '', internalType: 'contract IBookOfPledges', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOS',
    outputs: [
      { name: '', internalType: 'contract IBookOfShares', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'title', internalType: 'uint256', type: 'uint256' }],
    name: 'getKeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getROM',
    outputs: [
      {
        name: '',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getROS',
    outputs: [
      { name: '', internalType: 'contract IRegisterOfSwaps', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSHA',
    outputs: [
      {
        name: '',
        internalType: 'contract IShareholdersAgreement',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'caller', internalType: 'address', type: 'address' }],
    name: 'isKeeper',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueNewShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nameOfCompany',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'placeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeActionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDocOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'proposeMotionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'proposeToRemoveDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'proposeToRemoveOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'closingDate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'pushToCoffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'quitPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'refundDebt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'book', internalType: 'address', type: 'address' },
    ],
    name: 'regBook',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'keeper', internalType: 'address', type: 'address' },
    ],
    name: 'regBookeeper',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'regNumHash',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releasePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releaseSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releaseSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'director', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'officer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestPaidInCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestToBuy',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'revokeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'revokeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setAmtBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_regNumHash', internalType: 'bytes32', type: 'bytes32' },
      { name: '_name', internalType: 'string', type: 'string' },
      { name: '_symbol', internalType: 'string', type: 'string' },
    ],
    name: 'setCompInfo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'max', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxQtyOfMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setPayInAmt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setVoteBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signSHA',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbolOfCompany',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeGiftShares',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeSeat',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'terminateDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferTargetShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'd1', internalType: 'uint256', type: 'uint256' },
      { name: 'd2', internalType: 'uint256', type: 'uint256' },
      { name: 'd3', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateOracle',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'line', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePaidInDeadline',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteCounting',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteCountingOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'withdrawPayInAmt',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IRegCenter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iRegCenterABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'version',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'creator',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'CreateComp',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'typeOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'version',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'creator',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'CreateDoc',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'LockPoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'amt', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MintPoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'salt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ReleasePoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'SetDocKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfReward',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'SetReward',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'typeOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'version',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'SetTemplate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'TransferOwnership',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'to', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'amt', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferPoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newKeeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'TurnOverCenterKey',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'salt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'WithdrawPoints',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'checkLocker',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'counterOfDocs',
    outputs: [{ name: 'seq', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' }],
    name: 'counterOfVersions',
    outputs: [{ name: 'seq', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'primeKeyOfKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'createComp',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'primeKeyOfOwner', internalType: 'address', type: 'address' },
    ],
    name: 'createDoc',
    outputs: [
      {
        name: 'doc',
        internalType: 'struct DocsRepo.Doc',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'docExist',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllDocsSN',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBodiesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDoc',
    outputs: [
      {
        name: 'doc',
        internalType: 'struct DocsRepo.Doc',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getDocKeeper',
    outputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDocsList',
    outputs: [
      {
        name: '',
        internalType: 'struct DocsRepo.Doc[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'getMyUserNo',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRewardSetting',
    outputs: [
      {
        name: '',
        internalType: 'struct UsersRepo.Reward',
        type: 'tuple',
        components: [
          { name: 'eoaRewards', internalType: 'uint32', type: 'uint32' },
          { name: 'coaRewards', internalType: 'uint32', type: 'uint32' },
          { name: 'offAmt', internalType: 'uint32', type: 'uint32' },
          { name: 'discRate', internalType: 'uint16', type: 'uint16' },
          { name: 'refundRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'ceiling', internalType: 'uint64', type: 'uint64' },
          { name: 'floor', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getTemplate',
    outputs: [
      {
        name: 'doc',
        internalType: 'struct DocsRepo.Doc',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' }],
    name: 'getTempsList',
    outputs: [
      {
        name: '',
        internalType: 'struct DocsRepo.Doc[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getUser',
    outputs: [
      {
        name: '',
        internalType: 'struct UsersRepo.User',
        type: 'tuple',
        components: [
          { name: 'isCOA', internalType: 'bool', type: 'bool' },
          { name: 'counterOfV', internalType: 'uint32', type: 'uint32' },
          { name: 'balance', internalType: 'uint216', type: 'uint216' },
          {
            name: 'primeKey',
            internalType: 'struct UsersRepo.Key',
            type: 'tuple',
            components: [
              { name: 'pubKey', internalType: 'address', type: 'address' },
              { name: 'seqOfKey', internalType: 'uint16', type: 'uint16' },
              { name: 'dataOfKey', internalType: 'uint32', type: 'uint32' },
              { name: 'dateOfKey', internalType: 'uint48', type: 'uint48' },
            ],
          },
          {
            name: 'backupKey',
            internalType: 'struct UsersRepo.Key',
            type: 'tuple',
            components: [
              { name: 'pubKey', internalType: 'address', type: 'address' },
              { name: 'seqOfKey', internalType: 'uint16', type: 'uint16' },
              { name: 'dataOfKey', internalType: 'uint32', type: 'uint32' },
              { name: 'dateOfKey', internalType: 'uint48', type: 'uint48' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'targetAddr', internalType: 'address', type: 'address' }],
    name: 'getUserNo',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'docKeeper', internalType: 'address', type: 'address' }],
    name: 'initDocsRepo',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isCOA',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'key', internalType: 'address', type: 'address' }],
    name: 'isKey',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintAndLockPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'info', internalType: 'bytes32', type: 'bytes32' }],
    name: 'regUser',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releasePoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'bKey', internalType: 'address', type: 'address' }],
    name: 'setBackupKey',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfReward', internalType: 'bytes32', type: 'bytes32' }],
    name: 'setReward',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'setTemplate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newKeeper', internalType: 'address', type: 'address' }],
    name: 'turnOverCenterKey',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newKeeper', internalType: 'address', type: 'address' }],
    name: 'turnOverKeyOfDocsRepo',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'verifyDoc',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawPoints',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IGeneralKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iGeneralKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'corpNo',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'info', internalType: 'bytes32', type: 'bytes32', indexed: true },
    ],
    name: 'CreateCorpSeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'bool', type: 'bool', indexed: true },
    ],
    name: 'ExecAction',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'title',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'book', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'RegBook',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'title',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RegBookeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'regNumHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'nameOfCompany',
        internalType: 'string',
        type: 'string',
        indexed: true,
      },
      {
        name: 'symbolOfCompany',
        internalType: 'string',
        type: 'string',
        indexed: true,
      },
    ],
    name: 'SetCompInfo',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptAlongDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'sigHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'acceptSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'castVoteOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'closeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfIA', internalType: 'uint256', type: 'uint256' }],
    name: 'createIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfPld', internalType: 'bytes32', type: 'bytes32' },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'version', internalType: 'uint256', type: 'uint256' }],
    name: 'createSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'crystalizeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'parValue', internalType: 'uint256', type: 'uint256' },
      { name: 'paidPar', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'effectiveSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegateOfMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execActionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAntiDilution',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execDragAlong',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfRule', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfRightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'execOption',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'execSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execTagAlong',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'extDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'extendPledge',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOA',
    outputs: [
      { name: '', internalType: 'contract IBookOfIA', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOD',
    outputs: [
      { name: '', internalType: 'contract IBookOfDirectors', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOG',
    outputs: [
      { name: '', internalType: 'contract IBookOfGM', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOH',
    outputs: [
      { name: '', internalType: 'contract IBookOfSHA', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOO',
    outputs: [
      { name: '', internalType: 'contract IBookOfOptions', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOP',
    outputs: [
      { name: '', internalType: 'contract IBookOfPledges', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBOS',
    outputs: [
      { name: '', internalType: 'contract IBookOfShares', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getKeeper',
    outputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getROM',
    outputs: [
      {
        name: '',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getROS',
    outputs: [
      { name: '', internalType: 'contract IRegisterOfSwaps', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSHA',
    outputs: [
      {
        name: '',
        internalType: 'contract IShareholdersAgreement',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'caller', internalType: 'address', type: 'address' }],
    name: 'isKeeper',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueNewShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'placeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeActionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDocOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'proposeMotionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'proposeToRemoveDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'proposeToRemoveOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'closingDate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'pushToCoffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'quitPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'refundDebt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'keeper', internalType: 'address', type: 'address' },
    ],
    name: 'regBook',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'keeper', internalType: 'address', type: 'address' },
    ],
    name: 'regBookeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releasePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releaseSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releaseSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'director', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'officer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestPaidInCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestToBuy',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'revokeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'revokeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setAmtBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_regNumHash', internalType: 'bytes32', type: 'bytes32' },
      { name: '_name', internalType: 'string', type: 'string' },
      { name: '_symbol', internalType: 'string', type: 'string' },
    ],
    name: 'setCompInfo',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'max', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxQtyOfMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setPayInAmt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setVoteBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeGiftShares',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeSeat',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'terminateDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferTargetShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'd1', internalType: 'uint256', type: 'uint256' },
      { name: 'd2', internalType: 'uint256', type: 'uint256' },
      { name: 'd3', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateOracle',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'line', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePaidInDeadline',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteCounting',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteCountingOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'withdrawPayInAmt',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RegCenter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const regCenterABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'version',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'creator',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'CreateComp',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'typeOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'version',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'creator',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'CreateDoc',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'LockPoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'amt', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MintPoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'salt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ReleasePoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'SetDocKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfReward',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'SetReward',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'typeOfDoc',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'version',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'SetTemplate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'TransferOwnership',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'to', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'amt', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferPoints',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newKeeper',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'TurnOverCenterKey',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'salt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'WithdrawPoints',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'checkLocker',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'counterOfDocs',
    outputs: [{ name: 'seq', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' }],
    name: 'counterOfVersions',
    outputs: [{ name: 'seq', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'primeKeyOfKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'createComp',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'primeKeyOfOwner', internalType: 'address', type: 'address' },
    ],
    name: 'createDoc',
    outputs: [
      {
        name: 'doc',
        internalType: 'struct DocsRepo.Doc',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'docExist',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllDocsSN',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBodiesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDoc',
    outputs: [
      {
        name: 'doc',
        internalType: 'struct DocsRepo.Doc',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getDocKeeper',
    outputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDocsList',
    outputs: [
      {
        name: '',
        internalType: 'struct DocsRepo.Doc[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMyUserNo',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRewardSetting',
    outputs: [
      {
        name: '',
        internalType: 'struct UsersRepo.Reward',
        type: 'tuple',
        components: [
          { name: 'eoaRewards', internalType: 'uint32', type: 'uint32' },
          { name: 'coaRewards', internalType: 'uint32', type: 'uint32' },
          { name: 'offAmt', internalType: 'uint32', type: 'uint32' },
          { name: 'discRate', internalType: 'uint16', type: 'uint16' },
          { name: 'refundRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'ceiling', internalType: 'uint64', type: 'uint64' },
          { name: 'floor', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getTemplate',
    outputs: [
      {
        name: 'doc',
        internalType: 'struct DocsRepo.Doc',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' }],
    name: 'getTempsList',
    outputs: [
      {
        name: '',
        internalType: 'struct DocsRepo.Doc[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct DocsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
              { name: 'version', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'body', internalType: 'address', type: 'address' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getUser',
    outputs: [
      {
        name: '',
        internalType: 'struct UsersRepo.User',
        type: 'tuple',
        components: [
          { name: 'isCOA', internalType: 'bool', type: 'bool' },
          { name: 'counterOfV', internalType: 'uint32', type: 'uint32' },
          { name: 'balance', internalType: 'uint216', type: 'uint216' },
          {
            name: 'primeKey',
            internalType: 'struct UsersRepo.Key',
            type: 'tuple',
            components: [
              { name: 'pubKey', internalType: 'address', type: 'address' },
              { name: 'seqOfKey', internalType: 'uint16', type: 'uint16' },
              { name: 'dataOfKey', internalType: 'uint32', type: 'uint32' },
              { name: 'dateOfKey', internalType: 'uint48', type: 'uint48' },
            ],
          },
          {
            name: 'backupKey',
            internalType: 'struct UsersRepo.Key',
            type: 'tuple',
            components: [
              { name: 'pubKey', internalType: 'address', type: 'address' },
              { name: 'seqOfKey', internalType: 'uint16', type: 'uint16' },
              { name: 'dataOfKey', internalType: 'uint32', type: 'uint32' },
              { name: 'dateOfKey', internalType: 'uint48', type: 'uint48' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'targetAddr', internalType: 'address', type: 'address' }],
    name: 'getUserNo',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'docKeeper', internalType: 'address', type: 'address' }],
    name: 'initDocsRepo',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isCOA',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'key', internalType: 'address', type: 'address' }],
    name: 'isKey',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintAndLockPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mintPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'info', internalType: 'bytes32', type: 'bytes32' }],
    name: 'regUser',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releasePoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'bKey', internalType: 'address', type: 'address' }],
    name: 'setBackupKey',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfReward', internalType: 'bytes32', type: 'bytes32' }],
    name: 'setReward',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'setTemplate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPoints',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newKeeper', internalType: 'address', type: 'address' }],
    name: 'turnOverCenterKey',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newKeeper', internalType: 'address', type: 'address' }],
    name: 'turnOverKeyOfDocsRepo',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' }],
    name: 'verifyDoc',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'withdrawPoints',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOAKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const boaKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'circulateIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'closeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'version', internalType: 'uint256', type: 'uint256' },
      { name: 'primeKeyOfCaller', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createIA',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueNewShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'closingDate', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'pushToCoffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'revokeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'terminateDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferTargetShare',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BODKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bodKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'quitPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'target', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'voteCounting',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOGKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bogKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVoteOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegateOfMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execActionOfGM',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeActionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDocOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'director', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeSeat',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'voteCountingOfGM',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOHKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bohKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'acceptSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'circulateSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'version', internalType: 'uint256', type: 'uint256' },
      { name: 'primeKeyOfCaller', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'effectiveSHA',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'signSHA',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOOKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const booKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execOption',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'placeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releaseSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'd1', internalType: 'uint256', type: 'uint256' },
      { name: 'd2', internalType: 'uint256', type: 'uint256' },
      { name: 'd3', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateOracle',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOPKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bopKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfPld', internalType: 'bytes32', type: 'bytes32' },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'extDays', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'extendPledge',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'refundDebt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releasePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPledge',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOSKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bosKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCapital',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestPaidInCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setPayInAmt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'line', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePaidInDeadline',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'withdrawPayInAmt',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBOAKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iboaKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'circulateIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'closeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'version', internalType: 'uint256', type: 'uint256' },
      { name: 'primeKeyOfCaller', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueNewShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'closingDate', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'pushToCoffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'revokeDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'terminateDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferTargetShare',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBODKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ibodKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'quitPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'target', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'voteCounting',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBOGKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ibogKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVoteOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'motionId', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegateOfMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfAction', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execActionOfGM',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeActionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDocOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotionOfGM',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'target', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeDirector',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeSeat',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'voteCountingOfGM',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBOHKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ibohKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'acceptSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'circulateSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'version', internalType: 'uint256', type: 'uint256' },
      { name: 'primeKeyOfCaller', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'effectiveSHA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sha', internalType: 'address', type: 'address' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'signSHA',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBOOKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ibooKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execOption',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'placeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releaseSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'd1', internalType: 'uint256', type: 'uint256' },
      { name: 'd2', internalType: 'uint256', type: 'uint256' },
      { name: 'd3', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateOracle',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBOPKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ibopKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfPld', internalType: 'bytes32', type: 'bytes32' },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'extDays', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'extendPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockPledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'refundDebt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releasePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePledge',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPledge',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBOSKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ibosKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestPaidInCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setPayInAmt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'line', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePaidInDeadline',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'withdrawPayInAmt',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IROMKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iromKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setAmtBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'max', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxQtyOfMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setVoteBase',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IROSKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const irosKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'crystalizeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releaseSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestToBuy',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferSwap',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ISHAKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ishaKeeperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptAlongDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'dragAlong', internalType: 'bool', type: 'bool' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAlongRight',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAntiDilution',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfFRRule', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfRightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeGiftShares',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ROMKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const romKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setAmtBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'max', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxQtyOfMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setVoteBase',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ROSKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const rosKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'crystalizeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execSwap',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'lockSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releaseSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestToBuy',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferSwap',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SHAKeeper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const shaKeeperABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptAlongDeal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'acceptFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'dragAlong', internalType: 'bool', type: 'bool' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAlongRight',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAntiDilution',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfFRRule', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfRightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execFirstRefusal',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takeGiftShares',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BookOfIA
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bookOfIaABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'seqOfDeal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AcceptFirstRefusalClaims',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'follower',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'AddAlongDeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      { name: 'dragAlong', internalType: 'bool', type: 'bool', indexed: false },
      {
        name: 'seqOfDeal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'claimer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'ExecAlongRight',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'seqOfDeal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ExecFirstRefusalRight',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'UpdateStateOfFile',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'acceptFirstRefusalClaims',
    outputs: [
      {
        name: 'output',
        internalType: 'struct FRClaims.Claim[]',
        type: 'tuple[]',
        components: [
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'ratio', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'signingDays', internalType: 'uint16', type: 'uint16' },
      { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'claimsOfFR',
    outputs: [
      {
        name: '',
        internalType: 'struct FRClaims.Claim[]',
        type: 'tuple[]',
        components: [
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'ratio', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'ia', internalType: 'address', type: 'address' }],
    name: 'createMockOfIA',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'establishFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'dragAlong', internalType: 'bool', type: 'bool' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAlongRight',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'execFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execFirstRefusalRight',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDTClaimForShare',
    outputs: [
      {
        name: '',
        internalType: 'struct DTClaims.Claim',
        type: 'tuple',
        components: [
          { name: 'typeOfClaim', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'claimer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDTClaimsForDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DTClaims.Claim[]',
        type: 'tuple[]',
        components: [
          { name: 'typeOfClaim', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'claimer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'ia', internalType: 'address', type: 'address' }],
    name: 'getDraggingDeals',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFilesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getHeadOfFile',
    outputs: [
      {
        name: 'head',
        internalType: 'struct FilesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'signingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'shaExecDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'proposeDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'votingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getRefOfFile',
    outputs: [
      {
        name: 'ref',
        internalType: 'struct FilesRepo.Ref',
        type: 'tuple',
        components: [
          { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
          { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getSNOfFile',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasDTClaims',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isFRClaimer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'isRegistered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'groupRep', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mockDealOfBuy',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seller', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mockDealOfSell',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mockResultsOfAcct',
    outputs: [
      { name: 'groupRep', internalType: 'uint40', type: 'uint40' },
      { name: 'ratio', internalType: 'uint16', type: 'uint16' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'ia', internalType: 'address', type: 'address' }],
    name: 'mockResultsOfIA',
    outputs: [
      { name: 'controllor', internalType: 'uint40', type: 'uint40' },
      { name: 'ratio', internalType: 'uint16', type: 'uint16' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'proposeFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfFiles',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'regFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'revokeFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setStateOfFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'voteCountingForFile',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBookOfIA
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBookOfIaABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'seqOfDeal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AcceptFirstRefusalClaims',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'follower',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint64',
        type: 'uint64',
        indexed: false,
      },
    ],
    name: 'AddAlongDeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      { name: 'dragAlong', internalType: 'bool', type: 'bool', indexed: false },
      {
        name: 'seqOfDeal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'claimer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'ExecAlongRight',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'seqOfDeal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ExecFirstRefusalRight',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'UpdateStateOfFile',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'acceptFirstRefusalClaims',
    outputs: [
      {
        name: 'output',
        internalType: 'struct FRClaims.Claim[]',
        type: 'tuple[]',
        components: [
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'ratio', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'signingDays', internalType: 'uint16', type: 'uint16' },
      { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'claimsOfFR',
    outputs: [
      {
        name: '',
        internalType: 'struct FRClaims.Claim[]',
        type: 'tuple[]',
        components: [
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'ratio', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'ia', internalType: 'address', type: 'address' }],
    name: 'createMockOfIA',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'establishFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'dragAlong', internalType: 'bool', type: 'bool' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execAlongRight',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'execFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'execFirstRefusalRight',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDTClaimForShare',
    outputs: [
      {
        name: '',
        internalType: 'struct DTClaims.Claim',
        type: 'tuple',
        components: [
          { name: 'typeOfClaim', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'claimer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDTClaimsForDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DTClaims.Claim[]',
        type: 'tuple[]',
        components: [
          { name: 'typeOfClaim', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'claimer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'ia', internalType: 'address', type: 'address' }],
    name: 'getDraggingDeals',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFilesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getHeadOfFile',
    outputs: [
      {
        name: 'head',
        internalType: 'struct FilesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'signingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'shaExecDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'proposeDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'votingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getRefOfFile',
    outputs: [
      {
        name: 'ref',
        internalType: 'struct FilesRepo.Ref',
        type: 'tuple',
        components: [
          { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
          { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getSNOfFile',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasDTClaims',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isFRClaimer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'isRegistered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'groupRep', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mockDealOfBuy',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seller', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mockDealOfSell',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mockResultsOfAcct',
    outputs: [
      { name: 'groupRep', internalType: 'uint40', type: 'uint40' },
      { name: 'ratio', internalType: 'uint16', type: 'uint16' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'ia', internalType: 'address', type: 'address' }],
    name: 'mockResultsOfIA',
    outputs: [
      { name: 'controllor', internalType: 'uint40', type: 'uint40' },
      { name: 'ratio', internalType: 'uint16', type: 'uint16' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'proposeFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfFiles',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'regFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'revokeFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setStateOfFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'voteCountingForFile',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IInvestmentAgreement
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iInvestmentAgreementABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'hashLock',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'closingDate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ClearDealCP',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'CloseDeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'RevokeDeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'TerminateDeal',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'closingDate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'clearDealCP',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'closeDeal',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfClosedDeal',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfDeal',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sn', internalType: 'bytes32', type: 'bytes32' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'groupOfBuyer', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createDeal',
    outputs: [{ name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'delDeal',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getBodyOfDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DealsRepo.Body',
        type: 'tuple',
        components: [
          { name: 'buyer', internalType: 'uint40', type: 'uint40' },
          { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getHashLockOfDeal',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getHeadOfDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DealsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seller', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTypeOfIA',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'isDeal',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'lockDealSubject',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regDeal',
    outputs: [{ name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'releaseDealSubject',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'revokeDeal',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 't', internalType: 'uint256', type: 'uint256' }],
    name: 'setTypeOfIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'takeGift',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' }],
    name: 'terminateDeal',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// InvestmentAgreement
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const investmentAgreementABI = [
  { type: 'event', anonymous: false, inputs: [], name: 'CirculateDoc' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'hashLock',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
      {
        name: 'closingDate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ClearDealCP',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'CloseDeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'RevokeDeal',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool', indexed: false },
      {
        name: 'signingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'closingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetTiming',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'TerminateDeal',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'beBuyer', internalType: 'bool', type: 'bool' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addBlank',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'circulateDoc',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'circulated',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'closingDate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'clearDealCP',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'closeDeal',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfClosedDeal',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfDeal',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sn', internalType: 'bytes32', type: 'bytes32' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'groupOfBuyer', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createDeal',
    outputs: [{ name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'delDeal',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'established',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getBodyOfDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DealsRepo.Body',
        type: 'tuple',
        components: [
          { name: 'buyer', internalType: 'uint40', type: 'uint40' },
          { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getBuyers',
    outputs: [{ name: 'buyers', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCirculateDate',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' }],
    name: 'getDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getHashLockOfDeal',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getHeadOfDeal',
    outputs: [
      {
        name: '',
        internalType: 'struct DealsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seller', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getParasOfPage',
    outputs: [
      {
        name: '',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getParties',
    outputs: [
      { name: 'parties', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSellers',
    outputs: [
      { name: 'sellers', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSigOfParty',
    outputs: [
      { name: 'seqOfDeals', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: 'sig',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigningDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSigsOfPage',
    outputs: [
      {
        name: 'sigsOfBuyer',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      {
        name: 'sigsOfSeller',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTypeOfIA',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isBuyer',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' }],
    name: 'isDeal',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isInitSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isParty',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isSeller',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'lockDealSubject',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regDeal',
    outputs: [{ name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'signer', internalType: 'uint256', type: 'uint256' },
      { name: 'sigDate', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'regSig',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'releaseDealSubject',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seq', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'revokeDeal',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'signingDays', internalType: 'uint256', type: 'uint256' },
      { name: 'closingDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setTiming',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 't', internalType: 'uint256', type: 'uint256' }],
    name: 'setTypeOfIA',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signDoc',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'takeGift',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' }],
    name: 'terminateDeal',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BookOfDirectors
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bookOfDirectorsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfPos',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'AddPosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'attitude',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CastVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfMotion',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'CreateMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'delegate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'principal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'weight',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'EntrustDelegate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecResolution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proposer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ProposeMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfPos',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'QuitPosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPos',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RemoveOfficer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfPos',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'RemovePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfPos',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'TakePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'uint8', type: 'uint8', indexed: true },
    ],
    name: 'VoteCounting',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createMotion',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfPos', internalType: 'bytes32', type: 'bytes32' }],
    name: 'createPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'principal', internalType: 'uint256', type: 'uint256' },
      { name: 'weight', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: 'contents', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execResolution',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBallot',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Ballot',
        type: 'tuple',
        components: [
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'attitude', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint32', type: 'uint32' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getBoardSeatsOccupied',
    outputs: [{ name: 'num', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getBoardSeatsQuota',
    outputs: [{ name: 'quota', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getCaseOfAttitude',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Case',
        type: 'tuple',
        components: [
          { name: 'sumOfHead', internalType: 'uint32', type: 'uint32' },
          { name: 'sumOfWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'voters', internalType: 'uint256[]', type: 'uint256[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDelegateOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getDirectorsList',
    outputs: [{ name: 'list', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFullPosInfo',
    outputs: [
      {
        name: 'list',
        internalType: 'struct OfficersRepo.Position[]',
        type: 'tuple[]',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'baseDate', internalType: 'uint256', type: 'uint256' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
    name: 'getLeavesWeightAtDate',
    outputs: [{ name: 'weight', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'getMotion',
    outputs: [
      {
        name: 'motion',
        internalType: 'struct MotionsRepo.Motion',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct MotionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
              { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'executor', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct MotionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'proposer', internalType: 'uint40', type: 'uint40' },
              { name: 'proposeDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareRegDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteStartDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteEndDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'votingRule',
            internalType: 'struct RulesParser.VotingRule',
            type: 'tuple',
            components: [
              { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
              { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'authority', internalType: 'uint16', type: 'uint16' },
              { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
              { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
              { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
              { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
              { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
              {
                name: 'execDaysForPutOpt',
                internalType: 'uint8',
                type: 'uint8',
              },
              { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'contents', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumOfDirectors',
    outputs: [{ name: 'num', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumOfOfficers',
    outputs: [{ name: 'num', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOffList',
    outputs: [{ name: 'ls', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getOfficer',
    outputs: [
      {
        name: 'ls',
        internalType: 'struct OfficersRepo.Position[]',
        type: 'tuple[]',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getPosInHand',
    outputs: [{ name: 'ls', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPosList',
    outputs: [{ name: 'list', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'getPosition',
    outputs: [
      {
        name: 'pos',
        internalType: 'struct OfficersRepo.Position',
        type: 'tuple',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getVoterOfDelegateMap',
    outputs: [
      {
        name: '',
        internalType: 'struct DelegateMap.Voter',
        type: 'tuple',
        components: [
          { name: 'delegate', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'repWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'repHead', internalType: 'uint32', type: 'uint32' },
          { name: 'principals', internalType: 'uint40[]', type: 'uint40[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasPosition',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isDirector',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'isOccupied',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isOfficer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isPassed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isProposed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVoted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVotedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'posExist',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotion',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'quitPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'target', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'removePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'pos',
        internalType: 'struct OfficersRepo.Position',
        type: 'tuple',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'updatePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      {
        name: 'base',
        internalType: 'struct MotionsRepo.VoteCalBase',
        type: 'tuple',
        components: [
          { name: 'totalHead', internalType: 'uint64', type: 'uint64' },
          { name: 'totalWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'supportHead', internalType: 'uint64', type: 'uint64' },
          { name: 'supportWeight', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
    name: 'voteCounting',
    outputs: [{ name: 'result', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteEnded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteStarted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBookOfDirectors
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBookOfDirectorsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfPos',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'AddPosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'attitude',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CastVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfMotion',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'CreateMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'delegate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'principal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'weight',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'EntrustDelegate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecResolution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proposer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ProposeMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfPos',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'QuitPosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPos',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'target',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RemoveOfficer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfPos',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'RemovePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfPos',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'TakePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'uint8', type: 'uint8', indexed: true },
    ],
    name: 'VoteCounting',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createMotion',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfPos', internalType: 'bytes32', type: 'bytes32' }],
    name: 'createPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'principal', internalType: 'uint256', type: 'uint256' },
      { name: 'weight', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: 'contents', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execResolution',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBallot',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Ballot',
        type: 'tuple',
        components: [
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'attitude', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint32', type: 'uint32' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getBoardSeatsOccupied',
    outputs: [{ name: 'num', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getBoardSeatsQuota',
    outputs: [{ name: 'quota', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getCaseOfAttitude',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Case',
        type: 'tuple',
        components: [
          { name: 'sumOfHead', internalType: 'uint32', type: 'uint32' },
          { name: 'sumOfWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'voters', internalType: 'uint256[]', type: 'uint256[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDelegateOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getDirectorsList',
    outputs: [{ name: 'list', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFullPosInfo',
    outputs: [
      {
        name: 'list',
        internalType: 'struct OfficersRepo.Position[]',
        type: 'tuple[]',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'baseDate', internalType: 'uint256', type: 'uint256' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
    name: 'getLeavesWeightAtDate',
    outputs: [{ name: 'weight', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'getMotion',
    outputs: [
      {
        name: 'motion',
        internalType: 'struct MotionsRepo.Motion',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct MotionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
              { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'executor', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct MotionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'proposer', internalType: 'uint40', type: 'uint40' },
              { name: 'proposeDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareRegDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteStartDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteEndDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'votingRule',
            internalType: 'struct RulesParser.VotingRule',
            type: 'tuple',
            components: [
              { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
              { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'authority', internalType: 'uint16', type: 'uint16' },
              { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
              { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
              { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
              { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
              { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
              {
                name: 'execDaysForPutOpt',
                internalType: 'uint8',
                type: 'uint8',
              },
              { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'contents', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumOfDirectors',
    outputs: [{ name: 'num', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumOfOfficers',
    outputs: [{ name: 'num', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOffList',
    outputs: [{ name: 'ls', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getOfficer',
    outputs: [
      {
        name: 'ls',
        internalType: 'struct OfficersRepo.Position[]',
        type: 'tuple[]',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'getPosInHand',
    outputs: [{ name: 'ls', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPosList',
    outputs: [{ name: 'list', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'getPosition',
    outputs: [
      {
        name: 'pos',
        internalType: 'struct OfficersRepo.Position',
        type: 'tuple',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getVoterOfDelegateMap',
    outputs: [
      {
        name: '',
        internalType: 'struct DelegateMap.Voter',
        type: 'tuple',
        components: [
          { name: 'delegate', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'repWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'repHead', internalType: 'uint32', type: 'uint32' },
          { name: 'principals', internalType: 'uint40[]', type: 'uint40[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasPosition',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isDirector',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'isOccupied',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isOfficer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isPassed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isProposed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVoted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVotedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'canidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'posExist',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotion',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'quitPosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'target', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOfficer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfPos', internalType: 'uint256', type: 'uint256' }],
    name: 'removePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'takePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'pos',
        internalType: 'struct OfficersRepo.Position',
        type: 'tuple',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'updatePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      {
        name: 'base',
        internalType: 'struct MotionsRepo.VoteCalBase',
        type: 'tuple',
        components: [
          { name: 'totalHead', internalType: 'uint64', type: 'uint64' },
          { name: 'totalWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'supportHead', internalType: 'uint64', type: 'uint64' },
          { name: 'supportWeight', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
    name: 'voteCounting',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteEnded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteStarted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BookOfGM
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bookOfGmABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'attitude',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CastVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfMotion',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'CreateMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'delegate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'principal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'weight',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'EntrustDelegate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecResolution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proposer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ProposeMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'uint8', type: 'uint8', indexed: true },
    ],
    name: 'VoteCounting',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createMotion',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'principal', internalType: 'uint256', type: 'uint256' },
      { name: 'weight', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: 'contents', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execResolution',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBallot',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Ballot',
        type: 'tuple',
        components: [
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'attitude', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint32', type: 'uint32' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getCaseOfAttitude',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Case',
        type: 'tuple',
        components: [
          { name: 'sumOfHead', internalType: 'uint32', type: 'uint32' },
          { name: 'sumOfWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'voters', internalType: 'uint256[]', type: 'uint256[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDelegateOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'baseDate', internalType: 'uint256', type: 'uint256' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
    name: 'getLeavesWeightAtDate',
    outputs: [{ name: 'weight', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'getMotion',
    outputs: [
      {
        name: 'motion',
        internalType: 'struct MotionsRepo.Motion',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct MotionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
              { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'executor', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct MotionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'proposer', internalType: 'uint40', type: 'uint40' },
              { name: 'proposeDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareRegDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteStartDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteEndDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'votingRule',
            internalType: 'struct RulesParser.VotingRule',
            type: 'tuple',
            components: [
              { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
              { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'authority', internalType: 'uint16', type: 'uint16' },
              { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
              { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
              { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
              { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
              { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
              {
                name: 'execDaysForPutOpt',
                internalType: 'uint8',
                type: 'uint8',
              },
              { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'contents', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getVoterOfDelegateMap',
    outputs: [
      {
        name: '',
        internalType: 'struct DelegateMap.Voter',
        type: 'tuple',
        components: [
          { name: 'delegate', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'repWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'repHead', internalType: 'uint32', type: 'uint32' },
          { name: 'principals', internalType: 'uint40[]', type: 'uint40[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isPassed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isProposed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVoted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVotedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotion',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      {
        name: 'base',
        internalType: 'struct MotionsRepo.VoteCalBase',
        type: 'tuple',
        components: [
          { name: 'totalHead', internalType: 'uint64', type: 'uint64' },
          { name: 'totalWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'supportHead', internalType: 'uint64', type: 'uint64' },
          { name: 'supportWeight', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
    name: 'voteCounting',
    outputs: [{ name: 'result', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteEnded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteStarted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBookOfGM
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBookOfGmABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'attitude',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CastVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfMotion',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'CreateMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'delegate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'principal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'weight',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'EntrustDelegate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecResolution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proposer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ProposeMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'uint8', type: 'uint8', indexed: true },
    ],
    name: 'VoteCounting',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createMotion',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'principal', internalType: 'uint256', type: 'uint256' },
      { name: 'weight', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: 'contents', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execResolution',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBallot',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Ballot',
        type: 'tuple',
        components: [
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'attitude', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint32', type: 'uint32' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getCaseOfAttitude',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Case',
        type: 'tuple',
        components: [
          { name: 'sumOfHead', internalType: 'uint32', type: 'uint32' },
          { name: 'sumOfWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'voters', internalType: 'uint256[]', type: 'uint256[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDelegateOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'baseDate', internalType: 'uint256', type: 'uint256' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
    name: 'getLeavesWeightAtDate',
    outputs: [{ name: 'weight', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'getMotion',
    outputs: [
      {
        name: 'motion',
        internalType: 'struct MotionsRepo.Motion',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct MotionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
              { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'executor', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct MotionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'proposer', internalType: 'uint40', type: 'uint40' },
              { name: 'proposeDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareRegDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteStartDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteEndDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'votingRule',
            internalType: 'struct RulesParser.VotingRule',
            type: 'tuple',
            components: [
              { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
              { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'authority', internalType: 'uint16', type: 'uint16' },
              { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
              { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
              { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
              { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
              { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
              {
                name: 'execDaysForPutOpt',
                internalType: 'uint8',
                type: 'uint8',
              },
              { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'contents', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getVoterOfDelegateMap',
    outputs: [
      {
        name: '',
        internalType: 'struct DelegateMap.Voter',
        type: 'tuple',
        components: [
          { name: 'delegate', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'repWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'repHead', internalType: 'uint32', type: 'uint32' },
          { name: 'principals', internalType: 'uint40[]', type: 'uint40[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isPassed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isProposed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVoted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVotedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'canidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotion',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      {
        name: 'base',
        internalType: 'struct MotionsRepo.VoteCalBase',
        type: 'tuple',
        components: [
          { name: 'totalHead', internalType: 'uint64', type: 'uint64' },
          { name: 'totalWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'supportHead', internalType: 'uint64', type: 'uint64' },
          { name: 'supportWeight', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
    name: 'voteCounting',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteEnded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteStarted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BookOfSHA
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bookOfShaABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'pointer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'ChangePointer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'UpdateStateOfFile',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'changePointer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'signingDays', internalType: 'uint16', type: 'uint16' },
      { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'establishFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'execFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFilesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getHeadOfFile',
    outputs: [
      {
        name: 'head',
        internalType: 'struct FilesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'signingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'shaExecDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'proposeDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'votingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getRefOfFile',
    outputs: [
      {
        name: 'ref',
        internalType: 'struct FilesRepo.Ref',
        type: 'tuple',
        components: [
          { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
          { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getSNOfFile',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'isRegistered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pointer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'proposeFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfFiles',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'regFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'revokeFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setStateOfFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'voteCountingForFile',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBookOfSHA
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBookOfShaABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'pointer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'ChangePointer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'UpdateStateOfFile',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'changePointer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'signingDays', internalType: 'uint16', type: 'uint16' },
      { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'establishFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'execFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFilesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getHeadOfFile',
    outputs: [
      {
        name: 'head',
        internalType: 'struct FilesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'signingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'shaExecDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'proposeDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'votingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getRefOfFile',
    outputs: [
      {
        name: 'ref',
        internalType: 'struct FilesRepo.Ref',
        type: 'tuple',
        components: [
          { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
          { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getSNOfFile',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'isRegistered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pointer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'proposeFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfFiles',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'regFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'revokeFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setStateOfFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'voteCountingForFile',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IShareholdersAgreement
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iShareholdersAgreementABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'rule', internalType: 'bytes32', type: 'bytes32' }],
    name: 'addRule',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createTerm',
    outputs: [{ name: 'body', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getRule',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'title', internalType: 'uint256', type: 'uint256' }],
    name: 'getTerm',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'hasRule',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'title', internalType: 'uint256', type: 'uint256' }],
    name: 'hasTitle',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfRules',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfTerms',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'removeRule',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' }],
    name: 'removeTerm',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'rules',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'termIsExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'termIsTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'titles',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ShareholdersAgreement
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const shareholdersAgreementABI = [
  { type: 'event', anonymous: false, inputs: [], name: 'CirculateDoc' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool', indexed: false },
      {
        name: 'signingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'closingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetTiming',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'beBuyer', internalType: 'bool', type: 'bool' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addBlank',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'rule', internalType: 'bytes32', type: 'bytes32' }],
    name: 'addRule',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'circulateDoc',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'circulated',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' },
      { name: 'version', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createTerm',
    outputs: [{ name: 'body', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'established',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getBuyers',
    outputs: [{ name: 'buyers', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCirculateDate',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getParasOfPage',
    outputs: [
      {
        name: '',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getParties',
    outputs: [
      { name: 'parties', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'getRule',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSellers',
    outputs: [
      { name: 'sellers', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSigOfParty',
    outputs: [
      { name: 'seqOfDeals', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: 'sig',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigningDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSigsOfPage',
    outputs: [
      {
        name: 'sigsOfBuyer',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      {
        name: 'sigsOfSeller',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'title', internalType: 'uint256', type: 'uint256' }],
    name: 'getTerm',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'hasRule',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'title', internalType: 'uint256', type: 'uint256' }],
    name: 'hasTitle',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isBuyer',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isInitSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isParty',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isSeller',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfRules',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfTerms',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'signer', internalType: 'uint256', type: 'uint256' },
      { name: 'sigDate', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'regSig',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seq', internalType: 'uint256', type: 'uint256' }],
    name: 'removeRule',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'typeOfDoc', internalType: 'uint256', type: 'uint256' }],
    name: 'removeTerm',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'rules',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'signingDays', internalType: 'uint256', type: 'uint256' },
      { name: 'closingDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setTiming',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signDoc',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'termIsExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'title', internalType: 'uint256', type: 'uint256' },
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'termIsTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'titles',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BookOfOptions
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bookOfOptionsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'obligor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AddObligorIntoOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'codeOfOpt',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CreateOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'codeOfBrf',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'RegSwapOrder',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'obligor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RemoveObligorFromOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'data1',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'data2',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'data3',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateOracle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfBrf',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateStateOfBrief',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addObligorIntoOption',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'counterOfBriefs',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfOptions',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sn', internalType: 'bytes32', type: 'bytes32' },
      { name: 'snOfCond', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createOption',
    outputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwapOrder',
    outputs: [
      {
        name: 'swap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'execOption',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getALLOraclesOfOption',
    outputs: [
      {
        name: '',
        internalType: 'struct Checkpoints.Checkpoint[]',
        type: 'tuple[]',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getAllBriefsOfOption',
    outputs: [
      {
        name: '',
        internalType: 'struct OptionsRepo.Brief[]',
        type: 'tuple[]',
        components: [
          { name: 'seqOfBrf', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfConsider', internalType: 'uint64', type: 'uint64' },
          { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllOptions',
    outputs: [
      {
        name: '',
        internalType: 'struct OptionsRepo.Option[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBrief',
    outputs: [
      {
        name: 'brf',
        internalType: 'struct OptionsRepo.Brief',
        type: 'tuple',
        components: [
          { name: 'seqOfBrf', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfConsider', internalType: 'uint64', type: 'uint64' },
          { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getObligorsOfOption',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getOption',
    outputs: [
      {
        name: 'opt',
        internalType: 'struct OptionsRepo.Option',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'date', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getOracleAtDate',
    outputs: [
      {
        name: '',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isObligor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'isOption',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isRightholder',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'opt',
        internalType: 'struct OptionsRepo.Option',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
    name: 'issueOption',
    outputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'opts', internalType: 'address', type: 'address' }],
    name: 'regOptionTerms',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      {
        name: 'swap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeObligorFromOption',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'd1', internalType: 'uint256', type: 'uint256' },
      { name: 'd2', internalType: 'uint256', type: 'uint256' },
      { name: 'd3', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateOracle',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateStateOfBrief',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBookOfOptions
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBookOfOptionsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'obligor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AddObligorIntoOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'codeOfOpt',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CreateOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'codeOfBrf',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'RegSwapOrder',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'obligor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RemoveObligorFromOpt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'data1',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'data2',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'data3',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateOracle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfOpt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfBrf',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateStateOfBrief',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addObligorIntoOption',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'counterOfBriefs',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfOptions',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sn', internalType: 'bytes32', type: 'bytes32' },
      { name: 'snOfCond', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createOption',
    outputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwapOrder',
    outputs: [
      {
        name: 'swap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'execOption',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getALLOraclesOfOption',
    outputs: [
      {
        name: '',
        internalType: 'struct Checkpoints.Checkpoint[]',
        type: 'tuple[]',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getAllBriefsOfOption',
    outputs: [
      {
        name: '',
        internalType: 'struct OptionsRepo.Brief[]',
        type: 'tuple[]',
        components: [
          { name: 'seqOfBrf', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfConsider', internalType: 'uint64', type: 'uint64' },
          { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllOptions',
    outputs: [
      {
        name: '',
        internalType: 'struct OptionsRepo.Option[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBrief',
    outputs: [
      {
        name: 'brf',
        internalType: 'struct OptionsRepo.Brief',
        type: 'tuple',
        components: [
          { name: 'seqOfBrf', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfConsider', internalType: 'uint64', type: 'uint64' },
          { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getObligorsOfOption',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getOption',
    outputs: [
      {
        name: 'opt',
        internalType: 'struct OptionsRepo.Option',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'date', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getOracleAtDate',
    outputs: [
      {
        name: '',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isObligor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'isOption',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isRightholder',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'opt',
        internalType: 'struct OptionsRepo.Option',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
    name: 'issueOption',
    outputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'opts', internalType: 'address', type: 'address' }],
    name: 'regOptionTerms',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      {
        name: 'swap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeObligorFromOption',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'd1', internalType: 'uint256', type: 'uint256' },
      { name: 'd2', internalType: 'uint256', type: 'uint256' },
      { name: 'd3', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateOracle',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfBrf', internalType: 'uint256', type: 'uint256' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateStateOfBrief',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BookOfPledges
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bookOfPledgesABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'creditor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CreatePledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ExecPledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'extDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ExtendPledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'hashLock',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'LockPledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'refundAmt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RefundDebt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ReleasePledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RevokePledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newSeqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'buyer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferPledge',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'counterOfPledges',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfPld', internalType: 'bytes32', type: 'bytes32' },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createPledge',
    outputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execPledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'extDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'extendPledge',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getPledge',
    outputs: [
      {
        name: 'pld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getPledgesOfShare',
    outputs: [
      {
        name: '',
        internalType: 'struct PledgesRepo.Pledge[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: 'list', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPledge', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isPledge',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issuePledge',
    outputs: [
      {
        name: 'regHead',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockPledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'refundDebt',
    outputs: [
      {
        name: 'newPld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'pld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regPledge',
    outputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releasePledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPledge',
    outputs: [
      {
        name: 'newPld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBookOfPledges
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBookOfPledgesABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'creditor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CreatePledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ExecPledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'extDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ExtendPledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'hashLock',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'LockPledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'refundAmt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RefundDebt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ReleasePledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RevokePledge',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newSeqOfPld',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'buyer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferPledge',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'counterOfPledges',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfPld', internalType: 'bytes32', type: 'bytes32' },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createPledge',
    outputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execPledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'extDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'extendPledge',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getPledge',
    outputs: [
      {
        name: 'pld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getPledgesOfShare',
    outputs: [
      {
        name: '',
        internalType: 'struct PledgesRepo.Pledge[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: 'list', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isPledge',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'creditor', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteeDays', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'guaranteedAmt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issuePledge',
    outputs: [
      {
        name: 'regHead',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockPledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'refundDebt',
    outputs: [
      {
        name: 'newPld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'pld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regPledge',
    outputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releasePledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePledge',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfPld', internalType: 'uint256', type: 'uint256' },
      { name: 'buyer', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferPledge',
    outputs: [
      {
        name: 'newPld',
        internalType: 'struct PledgesRepo.Pledge',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct PledgesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
              { name: 'debtor', internalType: 'uint40', type: 'uint40' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct PledgesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'creditor', internalType: 'uint40', type: 'uint40' },
              { name: 'guaranteeDays', internalType: 'uint16', type: 'uint16' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'guaranteedAmt', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BookOfShares
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bookOfSharesABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'DecreaseCleanPaid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'DeregisterShare',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'IncreaseCleanPaid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'IssueShare',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PayInCapital',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetPayInAmt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SubAmountFromShare',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paidInDeadline',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdatePaidInDeadline',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateStateOfShare',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'WithdrawPayInAmt',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfClasses',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfShares',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCleanPaid',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getBodyOfShare',
    outputs: [
      {
        name: 'body',
        internalType: 'struct SharesRepo.Body',
        type: 'tuple',
        components: [
          { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
          { name: 'para', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getHeadOfShare',
    outputs: [
      {
        name: 'head',
        internalType: 'struct SharesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
          { name: 'class', internalType: 'uint16', type: 'uint16' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getLocker',
    outputs: [{ name: 'amount', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getShare',
    outputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getSharesOfClass',
    outputs: [
      { name: 'seqList', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseCleanPaid',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'isShare',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'shareNumber', internalType: 'bytes32', type: 'bytes32' },
      { name: 'payInDeadline', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
    name: 'regShare',
    outputs: [
      {
        name: 'newShare',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestPaidInCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setPayInAmt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'priceOfPaid', internalType: 'uint256', type: 'uint256' },
      { name: 'priceOfPar', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'deadline', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePaidInDeadline',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateStateOfShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'withdrawPayInAmt',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IBookOfShares
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iBookOfSharesABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'DecreaseCleanPaid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'DeregisterShare',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'IncreaseCleanPaid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'IssueShare',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'PayInCapital',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetPayInAmt',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SubAmountFromShare',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'paidInDeadline',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdatePaidInDeadline',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'UpdateStateOfShare',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfLocker',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'WithdrawPayInAmt',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfClasses',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfShares',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseCleanPaid',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getBodyOfShare',
    outputs: [
      {
        name: 'body',
        internalType: 'struct SharesRepo.Body',
        type: 'tuple',
        components: [
          { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
          { name: 'para', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getHeadOfShare',
    outputs: [
      {
        name: 'head',
        internalType: 'struct SharesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
          { name: 'class', internalType: 'uint16', type: 'uint16' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getLocker',
    outputs: [{ name: 'amount', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getShare',
    outputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getSharesOfClass',
    outputs: [
      { name: 'seqList', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseCleanPaid',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'isShare',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'shareNumber', internalType: 'bytes32', type: 'bytes32' },
      { name: 'payInDeadline', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
    name: 'regShare',
    outputs: [
      {
        name: 'newShare',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'requestPaidInCapital',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfLocker', internalType: 'bytes32', type: 'bytes32' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setPayInAmt',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'priceOfPaid', internalType: 'uint256', type: 'uint256' },
      { name: 'priceOfPar', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'paidInDeadline', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePaidInDeadline',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateStateOfShare',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'hashLock', internalType: 'bytes32', type: 'bytes32' }],
    name: 'withdrawPayInAmt',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IRegisterOfMembers
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iRegisterOfMembersABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'qtyOfMembers',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'AddMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'root', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'AddMemberToGroup',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'AddShareToMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CapDecrease',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CapIncrease',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'increase', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ChangeAmtOfMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'orgRep',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'newRep',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ChangeGroupRep',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'root', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RemoveMemberFromGroup',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RemoveShareFromMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'basedOnPar',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'SetAmtBase',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SetMaxQtyOfMembers',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'basedOnPar',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'SetVoteBase',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'addMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'root', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addMemberToGroup',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
    name: 'addShareToMember',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct1', internalType: 'uint256', type: 'uint256' },
      { name: 'acct2', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'affiliated',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'basedOnPar',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'date', internalType: 'uint256', type: 'uint256' }],
    name: 'capAtDate',
    outputs: [
      {
        name: 'cap',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'capDecrease',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'capIncrease',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'deltaPaid', internalType: 'uint256', type: 'uint256' },
      { name: 'deltaPar', internalType: 'uint256', type: 'uint256' },
      { name: 'decrease', internalType: 'bool', type: 'bool' },
    ],
    name: 'changeAmtOfMember',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'controllor',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'deepOfGroup',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getMembersOfClass',
    outputs: [
      { name: 'members', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumOfMembers',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSnapshot',
    outputs: [
      {
        name: '',
        internalType: 'struct TopChain.Node[]',
        type: 'tuple[]',
        components: [
          { name: 'prev', internalType: 'uint40', type: 'uint40' },
          { name: 'next', internalType: 'uint40', type: 'uint40' },
          { name: 'ptr', internalType: 'uint40', type: 'uint40' },
          { name: 'amt', internalType: 'uint64', type: 'uint64' },
          { name: 'sum', internalType: 'uint64', type: 'uint64' },
          { name: 'cat', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'groupRep',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'class', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isClassMember',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isGroupRep',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isMember',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'sharenumber', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isSNOfShare',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxQtyOfMembers',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'membersList',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'membersOfGroup',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ownersEquity',
    outputs: [
      {
        name: 'cap',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfGroups',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'root', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeMemberFromGroup',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
    name: 'removeShareFromMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'basedOnPar', internalType: 'bool', type: 'bool' }],
    name: 'setAmtBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'max', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxQtyOfMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setVoteBase',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'sharesClipOfMember',
    outputs: [
      {
        name: 'clip',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'sharesInHand',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'sharesList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalVotes',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'date', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'votesAtDate',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'votesInHand',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votesOfController',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'votesOfGroup',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RegisterOfMembers
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const registerOfMembersABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'qtyOfMembers',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'AddMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'root', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'AddMemberToGroup',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'AddShareToMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CapDecrease',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CapIncrease',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'paid',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'par', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'increase', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ChangeAmtOfMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'orgRep',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'newRep',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ChangeGroupRep',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'root', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RemoveMemberFromGroup',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfShare',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'acct', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RemoveShareFromMember',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'basedOnPar',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'SetAmtBase',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SetMaxQtyOfMembers',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'basedOnPar',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'SetVoteBase',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'addMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'root', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addMemberToGroup',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
    name: 'addShareToMember',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct1', internalType: 'uint256', type: 'uint256' },
      { name: 'acct2', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'affiliated',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'basedOnPar',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'date', internalType: 'uint256', type: 'uint256' }],
    name: 'capAtDate',
    outputs: [
      {
        name: 'cap',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'capDecrease',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'capIncrease',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'deltaPaid', internalType: 'uint256', type: 'uint256' },
      { name: 'deltaPar', internalType: 'uint256', type: 'uint256' },
      { name: 'increase', internalType: 'bool', type: 'bool' },
    ],
    name: 'changeAmtOfMember',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'controllor',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'deepOfGroup',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getMembersOfClass',
    outputs: [
      { name: 'members', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumOfMembers',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSnapshot',
    outputs: [
      {
        name: '',
        internalType: 'struct TopChain.Node[]',
        type: 'tuple[]',
        components: [
          { name: 'prev', internalType: 'uint40', type: 'uint40' },
          { name: 'next', internalType: 'uint40', type: 'uint40' },
          { name: 'ptr', internalType: 'uint40', type: 'uint40' },
          { name: 'amt', internalType: 'uint64', type: 'uint64' },
          { name: 'sum', internalType: 'uint64', type: 'uint64' },
          { name: 'cat', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'groupRep',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'class', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isClassMember',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isGroupRep',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isMember',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'sharenumber', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isSNOfShare',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxQtyOfMembers',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'membersList',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'membersOfGroup',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ownersEquity',
    outputs: [
      {
        name: 'cap',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfGroups',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'root', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeMemberFromGroup',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
    ],
    name: 'removeShareFromMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setAmtBase',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'max', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxQtyOfMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'onPar', internalType: 'bool', type: 'bool' }],
    name: 'setVoteBase',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'sharesClipOfMember',
    outputs: [
      {
        name: 'clip',
        internalType: 'struct Checkpoints.Checkpoint',
        type: 'tuple',
        components: [
          { name: 'timestamp', internalType: 'uint48', type: 'uint48' },
          { name: 'paid', internalType: 'uint64', type: 'uint64' },
          { name: 'par', internalType: 'uint64', type: 'uint64' },
          { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'sharesInHand',
    outputs: [{ name: 'list', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'sharesList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalVotes',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'date', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'votesAtDate',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'votesInHand',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votesOfController',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'votesOfGroup',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IRegisterOfSwaps
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iRegisterOfSwapsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'rightholder',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'obligor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paidOfConsider',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'rateOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'CreateSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfConsider',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paidOfConsider',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfTarget',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paidOfTarget',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'CrystalizeSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'hashLock',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'LockSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ReleaseSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'RevokeSwap',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfSwap',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'crystalizeSwap',
    outputs: [
      {
        name: 'body',
        internalType: 'struct SwapsRepo.Body',
        type: 'tuple',
        components: [
          { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
          { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfConsider', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'execSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllSwaps',
    outputs: [
      {
        name: '',
        internalType: 'struct SwapsRepo.Swap[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'getSwap',
    outputs: [
      {
        name: '',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isSwapSN',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'isSwapSeq',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct SwapsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfConsider', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint8', type: 'uint8' },
        ],
      },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'swap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regSwap',
    outputs: [
      {
        name: 'newSwap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releaseSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'revokeSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferSwap',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RegisterOfSwaps
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const registerOfSwapsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'rightholder',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'obligor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paidOfConsider',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'rateOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'CreateSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seqOfConsider',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paidOfConsider',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'seqOfTarget',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'paidOfTarget',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'CrystalizeSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'hashLock',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'LockSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'hashKey',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ReleaseSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfSwap',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'RevokeSwap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfSwap',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfConsider', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfTarget', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'crystalizeSwap',
    outputs: [
      {
        name: 'body',
        internalType: 'struct SwapsRepo.Body',
        type: 'tuple',
        components: [
          { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
          { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfConsider', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'execSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllSwaps',
    outputs: [
      {
        name: '',
        internalType: 'struct SwapsRepo.Swap[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'getSwap',
    outputs: [
      {
        name: '',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'snOfSwap', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isSwapSN',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'isSwapSeq',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct SwapsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfConsider', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint8', type: 'uint8' },
        ],
      },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paidOfConsider', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'issueSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'lockSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'swap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'regSwap',
    outputs: [
      {
        name: 'newSwap',
        internalType: 'struct SwapsRepo.Swap',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SwapsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
              {
                name: 'classOfConsider',
                internalType: 'uint16',
                type: 'uint16',
              },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
              { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SwapsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'seqOfConsider', internalType: 'uint32', type: 'uint32' },
              {
                name: 'paidOfConsider',
                internalType: 'uint64',
                type: 'uint64',
              },
              { name: 'seqOfTarget', internalType: 'uint32', type: 'uint32' },
              { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'hashKey', internalType: 'string', type: 'string' },
    ],
    name: 'releaseSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' }],
    name: 'revokeSwap',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfSwap', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'amt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferSwap',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AccessControl
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const accessControlABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IAccessControl
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iAccessControlABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FilesFolder
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const filesFolderABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'UpdateStateOfFile',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'signingDays', internalType: 'uint16', type: 'uint16' },
      { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'establishFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'execFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFilesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getHeadOfFile',
    outputs: [
      {
        name: 'head',
        internalType: 'struct FilesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'signingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'shaExecDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'proposeDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'votingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getRefOfFile',
    outputs: [
      {
        name: 'ref',
        internalType: 'struct FilesRepo.Ref',
        type: 'tuple',
        components: [
          { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
          { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getSNOfFile',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'isRegistered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'proposeFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfFiles',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'regFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'revokeFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setStateOfFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'voteCountingForFile',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IFilesFolder
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iFilesFolderABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'body', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'state',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'UpdateStateOfFile',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'signingDays', internalType: 'uint16', type: 'uint16' },
      { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
      { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
      { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'circulateFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'establishFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'execFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFilesList',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getHeadOfFile',
    outputs: [
      {
        name: 'head',
        internalType: 'struct FilesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'signingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'shaExecDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'proposeDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'votingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDeadline', internalType: 'uint48', type: 'uint48' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getRefOfFile',
    outputs: [
      {
        name: 'ref',
        internalType: 'struct FilesRepo.Ref',
        type: 'tuple',
        components: [
          { name: 'docUrl', internalType: 'bytes32', type: 'bytes32' },
          { name: 'docHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'getSNOfFile',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'isRegistered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      {
        name: 'vr',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'proposeFile',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'qtyOfFiles',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfDoc', internalType: 'bytes32', type: 'bytes32' },
      { name: 'body', internalType: 'address', type: 'address' },
    ],
    name: 'regFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'body', internalType: 'address', type: 'address' }],
    name: 'revokeFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'state', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setStateOfFile',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'body', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'voteCountingForFile',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMeetingMinutes
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iMeetingMinutesABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'attitude',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CastVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfMotion',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'CreateMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'delegate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'principal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'weight',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'EntrustDelegate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecResolution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proposer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ProposeMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'uint8', type: 'uint8', indexed: true },
    ],
    name: 'VoteCounting',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createMotion',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'principal', internalType: 'uint256', type: 'uint256' },
      { name: 'weight', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: 'contents', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execResolution',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBallot',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Ballot',
        type: 'tuple',
        components: [
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'attitude', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint32', type: 'uint32' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getCaseOfAttitude',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Case',
        type: 'tuple',
        components: [
          { name: 'sumOfHead', internalType: 'uint32', type: 'uint32' },
          { name: 'sumOfWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'voters', internalType: 'uint256[]', type: 'uint256[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDelegateOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'baseDate', internalType: 'uint256', type: 'uint256' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
    name: 'getLeavesWeightAtDate',
    outputs: [{ name: 'weight', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'getMotion',
    outputs: [
      {
        name: 'motion',
        internalType: 'struct MotionsRepo.Motion',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct MotionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
              { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'executor', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct MotionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'proposer', internalType: 'uint40', type: 'uint40' },
              { name: 'proposeDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareRegDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteStartDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteEndDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'votingRule',
            internalType: 'struct RulesParser.VotingRule',
            type: 'tuple',
            components: [
              { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
              { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'authority', internalType: 'uint16', type: 'uint16' },
              { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
              { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
              { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
              { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
              { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
              {
                name: 'execDaysForPutOpt',
                internalType: 'uint8',
                type: 'uint8',
              },
              { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'contents', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getVoterOfDelegateMap',
    outputs: [
      {
        name: '',
        internalType: 'struct DelegateMap.Voter',
        type: 'tuple',
        components: [
          { name: 'delegate', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'repWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'repHead', internalType: 'uint32', type: 'uint32' },
          { name: 'principals', internalType: 'uint40[]', type: 'uint40[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isPassed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isProposed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVoted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVotedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'canidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotion',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      {
        name: 'base',
        internalType: 'struct MotionsRepo.VoteCalBase',
        type: 'tuple',
        components: [
          { name: 'totalHead', internalType: 'uint64', type: 'uint64' },
          { name: 'totalWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'supportHead', internalType: 'uint64', type: 'uint64' },
          { name: 'supportWeight', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
    name: 'voteCounting',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteEnded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteStarted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ISigPage
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iSigPageABI = [
  { type: 'event', anonymous: false, inputs: [], name: 'CirculateDoc' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool', indexed: false },
      {
        name: 'signingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'closingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetTiming',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'beBuyer', internalType: 'bool', type: 'bool' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addBlank',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'circulateDoc',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'circulated',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'established',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getBuyers',
    outputs: [{ name: 'buyers', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCirculateDate',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getParasOfPage',
    outputs: [
      {
        name: '',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getParties',
    outputs: [
      { name: 'parties', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSellers',
    outputs: [
      { name: 'sellers', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initParty', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSigOfParty',
    outputs: [
      { name: 'seqOfDeals', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: 'sig',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigningDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSigsOfPage',
    outputs: [
      {
        name: 'sigsOfBuyer',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      {
        name: 'sigsOfSeller',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isBuyer',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isInitSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isParty',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isSeller',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'signer', internalType: 'uint256', type: 'uint256' },
      { name: 'sigDate', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'regSig',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'signingDays', internalType: 'uint256', type: 'uint256' },
      { name: 'closingDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setTiming',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signDoc',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MeetingMinutes
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const meetingMinutesABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'attitude',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sigHash',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: false,
      },
    ],
    name: 'CastVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'snOfMotion',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'contents',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'CreateMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'delegate',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'principal',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'weight',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'EntrustDelegate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'caller',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ExecResolution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'proposer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'ProposeMotion',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seqOfMotion',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      { name: 'result', internalType: 'uint8', type: 'uint8', indexed: true },
    ],
    name: 'VoteCounting',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'attitude', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createMotion',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'delegate', internalType: 'uint256', type: 'uint256' },
      { name: 'principal', internalType: 'uint256', type: 'uint256' },
      { name: 'weight', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'entrustDelegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execAction',
    outputs: [{ name: 'contents', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'contents', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execResolution',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBallot',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Ballot',
        type: 'tuple',
        components: [
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'attitude', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint32', type: 'uint32' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getCaseOfAttitude',
    outputs: [
      {
        name: '',
        internalType: 'struct BallotsBox.Case',
        type: 'tuple',
        components: [
          { name: 'sumOfHead', internalType: 'uint32', type: 'uint32' },
          { name: 'sumOfWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'voters', internalType: 'uint256[]', type: 'uint256[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDelegateOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'baseDate', internalType: 'uint256', type: 'uint256' },
      {
        name: '_rom',
        internalType: 'contract IRegisterOfMembers',
        type: 'address',
      },
    ],
    name: 'getLeavesWeightAtDate',
    outputs: [{ name: 'weight', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'getMotion',
    outputs: [
      {
        name: 'motion',
        internalType: 'struct MotionsRepo.Motion',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct MotionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
              { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
              { name: 'creator', internalType: 'uint40', type: 'uint40' },
              { name: 'executor', internalType: 'uint40', type: 'uint40' },
              { name: 'createDate', internalType: 'uint48', type: 'uint48' },
              { name: 'data', internalType: 'uint32', type: 'uint32' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct MotionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'proposer', internalType: 'uint40', type: 'uint40' },
              { name: 'proposeDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareRegDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteStartDate', internalType: 'uint48', type: 'uint48' },
              { name: 'voteEndDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'votingRule',
            internalType: 'struct RulesParser.VotingRule',
            type: 'tuple',
            components: [
              { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
              { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
              { name: 'authority', internalType: 'uint16', type: 'uint16' },
              { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
              { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
              { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
              { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
              { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
              { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
              { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
              { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
              {
                name: 'execDaysForPutOpt',
                internalType: 'uint8',
                type: 'uint8',
              },
              { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          { name: 'contents', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getVoterOfDelegateMap',
    outputs: [
      {
        name: '',
        internalType: 'struct DelegateMap.Voter',
        type: 'tuple',
        components: [
          { name: 'delegate', internalType: 'uint40', type: 'uint40' },
          { name: 'weight', internalType: 'uint64', type: 'uint64' },
          { name: 'repWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'repHead', internalType: 'uint32', type: 'uint32' },
          { name: 'principals', internalType: 'uint40[]', type: 'uint40[]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isPassed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'isProposed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVoted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
      { name: 'atti', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isVotedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'candidate', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'nominateOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'params', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'desHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeAction',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'doc', internalType: 'address', type: 'address' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'executor', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeDoc',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      { name: 'proposer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeMotion',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfPos', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfVR', internalType: 'uint256', type: 'uint256' },
      { name: 'nominator', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'proposeToRemoveOfficer',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' },
      {
        name: 'base',
        internalType: 'struct MotionsRepo.VoteCalBase',
        type: 'tuple',
        components: [
          { name: 'totalHead', internalType: 'uint64', type: 'uint64' },
          { name: 'totalWeight', internalType: 'uint64', type: 'uint64' },
          { name: 'supportHead', internalType: 'uint64', type: 'uint64' },
          { name: 'supportWeight', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
    name: 'voteCounting',
    outputs: [{ name: 'result', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteEnded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfMotion', internalType: 'uint256', type: 'uint256' }],
    name: 'voteStarted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SigPage
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const sigPageABI = [
  { type: 'event', anonymous: false, inputs: [], name: 'CirculateDoc' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool', indexed: false },
      {
        name: 'signingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'closingDays',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetTiming',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'beBuyer', internalType: 'bool', type: 'bool' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addBlank',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'circulateDoc',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'circulated',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'established',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getBuyers',
    outputs: [{ name: 'buyers', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCirculateDate',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClosingDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getParasOfPage',
    outputs: [
      {
        name: '',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getParties',
    outputs: [
      { name: 'parties', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSellers',
    outputs: [
      { name: 'sellers', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigDeadline',
    outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSigOfParty',
    outputs: [
      { name: 'seqOfDeals', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: 'sig',
        internalType: 'struct SigsRepo.Signature',
        type: 'tuple',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSigningDays',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'initPage', internalType: 'bool', type: 'bool' }],
    name: 'getSigsOfPage',
    outputs: [
      {
        name: 'sigsOfBuyer',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
      {
        name: 'sigsOfSeller',
        internalType: 'struct SigsRepo.Signature[]',
        type: 'tuple[]',
        components: [
          { name: 'signer', internalType: 'uint40', type: 'uint40' },
          { name: 'sigDate', internalType: 'uint48', type: 'uint48' },
          { name: 'blocknumber', internalType: 'uint64', type: 'uint64' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'arg', internalType: 'uint16', type: 'uint16' },
          { name: 'seq', internalType: 'uint16', type: 'uint16' },
          { name: 'attr', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isBuyer',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isInitSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isParty',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isSeller',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'isSigner',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'signer', internalType: 'uint256', type: 'uint256' },
      { name: 'sigDate', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'regSig',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'signingDays', internalType: 'uint256', type: 'uint256' },
      { name: 'closingDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setTiming',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'initPage', internalType: 'bool', type: 'bool' },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
      { name: 'sigHash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'signDoc',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ArrayUtils
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const arrayUtilsABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'arrA', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'arrB', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'combine',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'arrA', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'arrC', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'lenC', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'filter',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'arrA', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'arrB', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'fullyCoveredBy',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'arrA', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'arrB', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'merge',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'arrA', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'arrB', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'minus',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'arrA', internalType: 'uint256[]', type: 'uint256[]' }],
    name: 'refine',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'arrA', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'len', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'resize',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CondsRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const condsRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'compOpr', internalType: 'uint256', type: 'uint256' },
      { name: 'para', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'checkCond',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'cond',
        internalType: 'struct CondsRepo.Cond',
        type: 'tuple',
        components: [
          { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
          { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
          { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
          { name: 'para1', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
          { name: 'para2', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
          { name: 'para3', internalType: 'uint64', type: 'uint64' },
        ],
      },
      { name: 'data1', internalType: 'uint256', type: 'uint256' },
      { name: 'data2', internalType: 'uint256', type: 'uint256' },
      { name: 'data3', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'checkCondsOfThree',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'cond',
        internalType: 'struct CondsRepo.Cond',
        type: 'tuple',
        components: [
          { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
          { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
          { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
          { name: 'para1', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
          { name: 'para2', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
          { name: 'para3', internalType: 'uint64', type: 'uint64' },
        ],
      },
      { name: 'data1', internalType: 'uint256', type: 'uint256' },
      { name: 'data2', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'checkCondsOfTwo',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'cond',
        internalType: 'struct CondsRepo.Cond',
        type: 'tuple',
        components: [
          { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
          { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
          { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
          { name: 'para1', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
          { name: 'para2', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
          { name: 'para3', internalType: 'uint64', type: 'uint64' },
        ],
      },
      { name: 'data', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'checkSoleCond',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'cond',
        internalType: 'struct CondsRepo.Cond',
        type: 'tuple',
        components: [
          { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
          { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
          { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
          { name: 'para1', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
          { name: 'para2', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
          { name: 'para3', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
    name: 'codifyCond',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'cond',
        internalType: 'struct CondsRepo.Cond',
        type: 'tuple',
        components: [
          { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
          { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
          { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
          { name: 'para1', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
          { name: 'para2', internalType: 'uint64', type: 'uint64' },
          { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
          { name: 'para3', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DealsRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const dealsRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct DealsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seller', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'codifyHead',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'head',
        internalType: 'struct DealsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
          { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seller', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DocsRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const docsRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct DocsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
          { name: 'version', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
    name: 'codifyHead',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'head',
        internalType: 'struct DocsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfDoc', internalType: 'uint16', type: 'uint16' },
          { name: 'version', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfDoc', internalType: 'uint64', type: 'uint64' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LockersRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const lockersRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'locker',
        internalType: 'struct LockersRepo.Locker',
        type: 'tuple',
        components: [
          { name: 'from', internalType: 'uint40', type: 'uint40' },
          { name: 'to', internalType: 'uint40', type: 'uint40' },
          { name: 'expireDate', internalType: 'uint48', type: 'uint48' },
          { name: 'hashLock', internalType: 'uint128', type: 'uint128' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MotionsRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const motionsRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'codifyHead',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'head',
        internalType: 'struct MotionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'typeOfMotion', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfMotion', internalType: 'uint64', type: 'uint64' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'creator', internalType: 'uint40', type: 'uint40' },
          { name: 'executor', internalType: 'uint40', type: 'uint40' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OfficersRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const officersRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'position',
        internalType: 'struct OfficersRepo.Position',
        type: 'tuple',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
    name: 'codifyPosition',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'position',
        internalType: 'struct OfficersRepo.Position',
        type: 'tuple',
        components: [
          { name: 'title', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'acct', internalType: 'uint40', type: 'uint40' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'startDate', internalType: 'uint48', type: 'uint48' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OptionsRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const optionsRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'brf',
        internalType: 'struct OptionsRepo.Brief',
        type: 'tuple',
        components: [
          { name: 'seqOfBrf', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'paidOfConsider', internalType: 'uint64', type: 'uint64' },
          { name: 'paidOfTarget', internalType: 'uint64', type: 'uint64' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'state', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
    name: 'codifyBrief',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
    name: 'codifyHead',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PledgesRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pledgesRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'codifyHead',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'head',
        internalType: 'struct PledgesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'seqOfPld', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'pledgor', internalType: 'uint40', type: 'uint40' },
          { name: 'debtor', internalType: 'uint40', type: 'uint40' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RulesParser
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const rulesParserABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'firstRefusalRuleParser',
    outputs: [
      {
        name: 'rule',
        internalType: 'struct RulesParser.FirstRefusalRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
          { name: 'membersEqual', internalType: 'bool', type: 'bool' },
          { name: 'proRata', internalType: 'bool', type: 'bool' },
          { name: 'basedOnPar', internalType: 'bool', type: 'bool' },
          {
            name: 'rightholders',
            internalType: 'uint40[4]',
            type: 'uint40[4]',
          },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'governanceRuleParser',
    outputs: [
      {
        name: 'rule',
        internalType: 'struct RulesParser.GovernanceRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'basedOnPar', internalType: 'bool', type: 'bool' },
          {
            name: 'proposeWeightRatioOfGM',
            internalType: 'uint16',
            type: 'uint16',
          },
          {
            name: 'proposeHeadNumOfMembers',
            internalType: 'uint16',
            type: 'uint16',
          },
          {
            name: 'proposeHeadNumOfDirectors',
            internalType: 'uint16',
            type: 'uint16',
          },
          { name: 'maxNumOfMembers', internalType: 'uint32', type: 'uint32' },
          { name: 'quorumOfGM', internalType: 'uint16', type: 'uint16' },
          { name: 'maxNumOfDirectors', internalType: 'uint16', type: 'uint16' },
          { name: 'tenureMonOfBoard', internalType: 'uint16', type: 'uint16' },
          {
            name: 'quorumOfBoardMeeting',
            internalType: 'uint16',
            type: 'uint16',
          },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
          { name: 'flag', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'groupUpdateOrderParser',
    outputs: [
      {
        name: 'order',
        internalType: 'struct RulesParser.GroupUpdateOrder',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'addMember', internalType: 'bool', type: 'bool' },
          { name: 'groupRep', internalType: 'uint40', type: 'uint40' },
          { name: 'members', internalType: 'uint40[4]', type: 'uint40[4]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'linkRuleParser',
    outputs: [
      {
        name: 'rule',
        internalType: 'struct RulesParser.LinkRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'drager', internalType: 'uint40', type: 'uint40' },
          { name: 'dragerGroup', internalType: 'uint40', type: 'uint40' },
          { name: 'triggerType', internalType: 'uint8', type: 'uint8' },
          {
            name: 'shareRatioThreshold',
            internalType: 'uint16',
            type: 'uint16',
          },
          { name: 'proRata', internalType: 'bool', type: 'bool' },
          { name: 'unitPrice', internalType: 'uint32', type: 'uint32' },
          { name: 'roe', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'positionAllocateRuleParser',
    outputs: [
      {
        name: 'rule',
        internalType: 'struct RulesParser.PositionAllocateRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'removePos', internalType: 'bool', type: 'bool' },
          { name: 'seqOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'titleOfPos', internalType: 'uint16', type: 'uint16' },
          { name: 'nominator', internalType: 'uint40', type: 'uint40' },
          { name: 'titleOfNominator', internalType: 'uint16', type: 'uint16' },
          { name: 'seqOfVR', internalType: 'uint16', type: 'uint16' },
          { name: 'endDate', internalType: 'uint48', type: 'uint48' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'votingRuleParser',
    outputs: [
      {
        name: 'rule',
        internalType: 'struct RulesParser.VotingRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'authority', internalType: 'uint16', type: 'uint16' },
          { name: 'headRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'amountRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'onlyAttendance', internalType: 'bool', type: 'bool' },
          { name: 'impliedConsent', internalType: 'bool', type: 'bool' },
          { name: 'partyAsConsent', internalType: 'bool', type: 'bool' },
          { name: 'againstShallBuy', internalType: 'bool', type: 'bool' },
          { name: 'shaExecDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reviewDays', internalType: 'uint8', type: 'uint8' },
          { name: 'reconsiderDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votePrepareDays', internalType: 'uint8', type: 'uint8' },
          { name: 'votingDays', internalType: 'uint8', type: 'uint8' },
          { name: 'execDaysForPutOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'vetoers', internalType: 'uint40[2]', type: 'uint40[2]' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SharesRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const sharesRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct SharesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
          { name: 'class', internalType: 'uint16', type: 'uint16' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
    name: 'codifyHead',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'head',
        internalType: 'struct SharesRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
          { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
          { name: 'class', internalType: 'uint16', type: 'uint16' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
          { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
          { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'argu', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SwapsRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const swapsRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'head',
        internalType: 'struct SwapsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfConsider', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
    name: 'codifyHead',
    outputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'snParser',
    outputs: [
      {
        name: 'head',
        internalType: 'struct SwapsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'classOfTarget', internalType: 'uint16', type: 'uint16' },
          { name: 'classOfConsider', internalType: 'uint16', type: 'uint16' },
          { name: 'createDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
          { name: 'rateOfSwap', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// UsersRepo
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const usersRepoABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'info', internalType: 'bytes32', type: 'bytes32' }],
    name: 'infoParser',
    outputs: [
      {
        name: 'user',
        internalType: 'struct UsersRepo.User',
        type: 'tuple',
        components: [
          { name: 'isCOA', internalType: 'bool', type: 'bool' },
          { name: 'counterOfV', internalType: 'uint32', type: 'uint32' },
          { name: 'balance', internalType: 'uint216', type: 'uint216' },
          {
            name: 'primeKey',
            internalType: 'struct UsersRepo.Key',
            type: 'tuple',
            components: [
              { name: 'pubKey', internalType: 'address', type: 'address' },
              { name: 'seqOfKey', internalType: 'uint16', type: 'uint16' },
              { name: 'dataOfKey', internalType: 'uint32', type: 'uint32' },
              { name: 'dateOfKey', internalType: 'uint48', type: 'uint48' },
            ],
          },
          {
            name: 'backupKey',
            internalType: 'struct UsersRepo.Key',
            type: 'tuple',
            components: [
              { name: 'pubKey', internalType: 'address', type: 'address' },
              { name: 'seqOfKey', internalType: 'uint16', type: 'uint16' },
              { name: 'dataOfKey', internalType: 'uint32', type: 'uint32' },
              { name: 'dateOfKey', internalType: 'uint48', type: 'uint48' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'sn', internalType: 'bytes32', type: 'bytes32' }],
    name: 'rewardParser',
    outputs: [
      {
        name: 'reward',
        internalType: 'struct UsersRepo.Reward',
        type: 'tuple',
        components: [
          { name: 'eoaRewards', internalType: 'uint32', type: 'uint32' },
          { name: 'coaRewards', internalType: 'uint32', type: 'uint32' },
          { name: 'offAmt', internalType: 'uint32', type: 'uint32' },
          { name: 'discRate', internalType: 'uint16', type: 'uint16' },
          { name: 'refundRatio', internalType: 'uint16', type: 'uint16' },
          { name: 'ceiling', internalType: 'uint64', type: 'uint64' },
          { name: 'floor', internalType: 'uint64', type: 'uint64' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AntiDilution
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const antiDilutionABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addBenchmark',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addObligor',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClasses',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getFloorPriceOfClass',
    outputs: [{ name: 'price', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getGiftPaid',
    outputs: [{ name: 'gift', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getObligorsOfAD',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'isMarked',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isObligor',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'removeBenchmark',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeObligor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IAlongs
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iAlongsABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addFollower',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'rule', internalType: 'bytes32', type: 'bytes32' },
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createLink',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dragers',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'followers',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'isDrager',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isLinked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'linkRule',
    outputs: [
      {
        name: '',
        internalType: 'struct RulesParser.LinkRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'drager', internalType: 'uint40', type: 'uint40' },
          { name: 'dragerGroup', internalType: 'uint40', type: 'uint40' },
          { name: 'triggerType', internalType: 'uint8', type: 'uint8' },
          {
            name: 'shareRatioThreshold',
            internalType: 'uint16',
            type: 'uint16',
          },
          { name: 'proRata', internalType: 'bool', type: 'bool' },
          { name: 'unitPrice', internalType: 'uint32', type: 'uint32' },
          { name: 'roe', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'priceCheck',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'removeDrager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeFollower',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DragAlong
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const dragAlongABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addFollower',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'rule', internalType: 'bytes32', type: 'bytes32' },
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createLink',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dragers',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'followers',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'isDrager',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isLinked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'linkRule',
    outputs: [
      {
        name: '',
        internalType: 'struct RulesParser.LinkRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'drager', internalType: 'uint40', type: 'uint40' },
          { name: 'dragerGroup', internalType: 'uint40', type: 'uint40' },
          { name: 'triggerType', internalType: 'uint8', type: 'uint8' },
          {
            name: 'shareRatioThreshold',
            internalType: 'uint16',
            type: 'uint16',
          },
          { name: 'proRata', internalType: 'bool', type: 'bool' },
          { name: 'unitPrice', internalType: 'uint32', type: 'uint32' },
          { name: 'roe', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'priceCheck',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'removeDrager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeFollower',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IAntiDilution
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iAntiDilutionABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addBenchmark',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addObligor',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getClasses',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getFloorPriceOfClass',
    outputs: [{ name: 'price', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      { name: 'seqOfDeal', internalType: 'uint256', type: 'uint256' },
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getGiftPaid',
    outputs: [{ name: 'gift', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'getObligorsOfAD',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'isMarked',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isObligor',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'class', internalType: 'uint256', type: 'uint256' }],
    name: 'removeBenchmark',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'class', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeObligor',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ILockUp
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iLockUpABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'keyholder', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addKeyholder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'delLocker',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getLocker',
    outputs: [
      { name: 'dueDate', internalType: 'uint48', type: 'uint48' },
      { name: 'keyHolders', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'isLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lockedShares',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'keyholder', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeKeyholder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'dueDate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setLocker',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IOptions
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iOptionsABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addObligorIntoOpt',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfOptions',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfOpt', internalType: 'bytes32', type: 'bytes32' },
      { name: 'snOfCond', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createOption',
    outputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'delOption',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllOptions',
    outputs: [
      {
        name: '',
        internalType: 'struct OptionsRepo.Option[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getObligorsOfOption',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getOption',
    outputs: [
      {
        name: 'option',
        internalType: 'struct OptionsRepo.Option',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isObligor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'isOption',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeObligorFromOpt',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ITerm
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iTermABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LockUp
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const lockUpABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'keyholder', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addKeyholder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'delLocker',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'getLocker',
    outputs: [
      { name: 'dueDate', internalType: 'uint48', type: 'uint48' },
      { name: 'keyHolders', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfShare', internalType: 'uint256', type: 'uint256' }],
    name: 'isLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lockedShares',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'keyholder', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeKeyholder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfShare', internalType: 'uint256', type: 'uint256' },
      { name: 'dueDate', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setLocker',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Options
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const optionsABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addObligorIntoOpt',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'counterOfOptions',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'snOfOpt', internalType: 'bytes32', type: 'bytes32' },
      { name: 'snOfCond', internalType: 'bytes32', type: 'bytes32' },
      { name: 'rightholder', internalType: 'uint256', type: 'uint256' },
      { name: 'paid', internalType: 'uint256', type: 'uint256' },
      { name: 'par', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createOption',
    outputs: [
      {
        name: 'head',
        internalType: 'struct OptionsRepo.Head',
        type: 'tuple',
        components: [
          { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
          { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
          { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
          { name: 'rate', internalType: 'uint32', type: 'uint32' },
          { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
          { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
          { name: 'execDays', internalType: 'uint16', type: 'uint16' },
          { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
          { name: 'obligor', internalType: 'uint40', type: 'uint40' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'delOption',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAllOptions',
    outputs: [
      {
        name: '',
        internalType: 'struct OptionsRepo.Option[]',
        type: 'tuple[]',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getObligorsOfOption',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'getOption',
    outputs: [
      {
        name: 'option',
        internalType: 'struct OptionsRepo.Option',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct OptionsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfOpt', internalType: 'uint32', type: 'uint32' },
              { name: 'typeOfOpt', internalType: 'uint8', type: 'uint8' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'rate', internalType: 'uint32', type: 'uint32' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'triggerDate', internalType: 'uint48', type: 'uint48' },
              { name: 'execDays', internalType: 'uint16', type: 'uint16' },
              { name: 'closingDays', internalType: 'uint16', type: 'uint16' },
              { name: 'obligor', internalType: 'uint40', type: 'uint40' },
            ],
          },
          {
            name: 'cond',
            internalType: 'struct CondsRepo.Cond',
            type: 'tuple',
            components: [
              { name: 'seqOfCond', internalType: 'uint32', type: 'uint32' },
              { name: 'logicOpr', internalType: 'uint8', type: 'uint8' },
              { name: 'compOpr1', internalType: 'uint8', type: 'uint8' },
              { name: 'para1', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr2', internalType: 'uint8', type: 'uint8' },
              { name: 'para2', internalType: 'uint64', type: 'uint64' },
              { name: 'compOpr3', internalType: 'uint8', type: 'uint8' },
              { name: 'para3', internalType: 'uint64', type: 'uint64' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct OptionsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'rightholder', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'arg', internalType: 'uint16', type: 'uint16' },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSNList',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isObligor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' }],
    name: 'isOption',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'seqOfOpt', internalType: 'uint256', type: 'uint256' },
      { name: 'obligor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeObligorFromOpt',
    outputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TagAlong
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const tagAlongABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'directKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'regCenter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'generalKeeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Init',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'LockContents' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'target',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'RemoveDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'keeper',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SetDirectKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetGeneralCounsel',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'acct',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'SetOwner',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'abandonRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addFollower',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'rule', internalType: 'bytes32', type: 'bytes32' },
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createLink',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dragers',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'finalized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'followers',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBookeeper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGeneralCounsel',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwner',
    outputs: [{ name: '', internalType: 'uint40', type: 'uint40' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'uint256', type: 'uint256' },
      { name: 'directKeeper', internalType: 'address', type: 'address' },
      { name: 'regCenter', internalType: 'address', type: 'address' },
      { name: 'generalKeeper', internalType: 'address', type: 'address' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'isDrager',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isExempted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isLinked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
    ],
    name: 'isTriggered',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'linkRule',
    outputs: [
      {
        name: '',
        internalType: 'struct RulesParser.LinkRule',
        type: 'tuple',
        components: [
          { name: 'seqOfRule', internalType: 'uint16', type: 'uint16' },
          { name: 'qtyOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'seqOfSubRule', internalType: 'uint8', type: 'uint8' },
          { name: 'drager', internalType: 'uint40', type: 'uint40' },
          { name: 'dragerGroup', internalType: 'uint40', type: 'uint40' },
          { name: 'triggerType', internalType: 'uint8', type: 'uint8' },
          {
            name: 'shareRatioThreshold',
            internalType: 'uint16',
            type: 'uint16',
          },
          { name: 'proRata', internalType: 'bool', type: 'bool' },
          { name: 'unitPrice', internalType: 'uint32', type: 'uint32' },
          { name: 'roe', internalType: 'uint32', type: 'uint32' },
          { name: 'para', internalType: 'uint16', type: 'uint16' },
          { name: 'data', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockContents',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'ia', internalType: 'address', type: 'address' },
      {
        name: 'deal',
        internalType: 'struct DealsRepo.Deal',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct DealsRepo.Head',
            type: 'tuple',
            components: [
              { name: 'typeOfDeal', internalType: 'uint8', type: 'uint8' },
              { name: 'seqOfDeal', internalType: 'uint16', type: 'uint16' },
              { name: 'preSeq', internalType: 'uint16', type: 'uint16' },
              { name: 'classOfShare', internalType: 'uint16', type: 'uint16' },
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'seller', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'closingDate', internalType: 'uint48', type: 'uint48' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct DealsRepo.Body',
            type: 'tuple',
            components: [
              { name: 'buyer', internalType: 'uint40', type: 'uint40' },
              { name: 'groupOfBuyer', internalType: 'uint40', type: 'uint40' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint16', type: 'uint16' },
              { name: 'flag', internalType: 'bool', type: 'bool' },
            ],
          },
          { name: 'hashLock', internalType: 'bytes32', type: 'bytes32' },
        ],
      },
      {
        name: 'share',
        internalType: 'struct SharesRepo.Share',
        type: 'tuple',
        components: [
          {
            name: 'head',
            internalType: 'struct SharesRepo.Head',
            type: 'tuple',
            components: [
              { name: 'seqOfShare', internalType: 'uint32', type: 'uint32' },
              { name: 'preSeq', internalType: 'uint32', type: 'uint32' },
              { name: 'class', internalType: 'uint16', type: 'uint16' },
              { name: 'issueDate', internalType: 'uint48', type: 'uint48' },
              { name: 'shareholder', internalType: 'uint40', type: 'uint40' },
              { name: 'priceOfPaid', internalType: 'uint32', type: 'uint32' },
              { name: 'priceOfPar', internalType: 'uint32', type: 'uint32' },
              { name: 'para', internalType: 'uint16', type: 'uint16' },
              { name: 'argu', internalType: 'uint8', type: 'uint8' },
            ],
          },
          {
            name: 'body',
            internalType: 'struct SharesRepo.Body',
            type: 'tuple',
            components: [
              { name: 'payInDeadline', internalType: 'uint48', type: 'uint48' },
              { name: 'paid', internalType: 'uint64', type: 'uint64' },
              { name: 'par', internalType: 'uint64', type: 'uint64' },
              { name: 'cleanPaid', internalType: 'uint64', type: 'uint64' },
              { name: 'state', internalType: 'uint8', type: 'uint8' },
              { name: 'para', internalType: 'uint8', type: 'uint8' },
            ],
          },
        ],
      },
      { name: 'caller', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'priceCheck',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'removeDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'drager', internalType: 'uint256', type: 'uint256' }],
    name: 'removeDrager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'drager', internalType: 'uint256', type: 'uint256' },
      { name: 'follower', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeFollower',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'keeper', internalType: 'address', type: 'address' }],
    name: 'setDirectKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setGeneralCounsel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'acct', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'acct', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRoleAdmin',
    outputs: [],
  },
] as const
